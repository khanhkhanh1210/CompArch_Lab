#! /c/Source/iverilog-install/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-1539-g2693dd32b)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "D:\iverilog\lib\ivl\system.vpi";
:vpi_module "D:\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "D:\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "D:\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "D:\iverilog\lib\ivl\va_math.vpi";
:vpi_module "D:\iverilog\lib\ivl\v2009.vpi";
S_000001d75d6cbb60 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_000001d75d5860a0 .scope module, "add_sub_tb" "add_sub_tb" 3 1;
 .timescale 0 0;
P_000001d75d575bf0 .param/l "DATA_SIZE" 0 3 2, +C4<00000000000000000000000000100000>;
v000001d75d578f80_0 .var "a", 31 0;
v000001d75d579020_0 .var/2s "add_errors", 31 0;
v000001d75d5790c0_0 .var "b", 31 0;
v000001d75d583be0_0 .var "expected", 31 0;
v000001d75d583c80_0 .var "select", 0 0;
v000001d75d583d70_0 .var/2s "sub_errors", 31 0;
v000001d75d584090_0 .net "sum", 31 0, L_000001d75d5841d0;  1 drivers
S_000001d75d586230 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 20, 3 20 0, S_000001d75d5860a0;
 .timescale 0 0;
v000001d75d5536c0_0 .var/2s "i", 31 0;
S_000001d75d578a30 .scope module, "dut" "add_sub" 3 12, 4 1 0, S_000001d75d5860a0;
 .timescale 0 0;
    .port_info 0 /INPUT 32 "X";
    .port_info 1 /INPUT 32 "Y";
    .port_info 2 /INPUT 1 "Cin";
    .port_info 3 /OUTPUT 32 "S";
P_000001d75d575730 .param/l "data_size" 0 4 1, +C4<00000000000000000000000000100000>;
L_000001d75d58af90 .functor XOR 32, L_000001d75d584810, v000001d75d5790c0_0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v000001d75d6cbcf0_0 .net "Cin", 0 0, v000001d75d583c80_0;  1 drivers
v000001d75d5863c0_0 .net "S", 31 0, L_000001d75d5841d0;  alias, 1 drivers
v000001d75d586460_0 .net "X", 31 0, v000001d75d578f80_0;  1 drivers
v000001d75d578bc0_0 .net "Y", 31 0, v000001d75d5790c0_0;  1 drivers
v000001d75d578c60_0 .net *"_ivl_0", 31 0, L_000001d75d584810;  1 drivers
v000001d75d578d00_0 .net *"_ivl_2", 31 0, L_000001d75d58af90;  1 drivers
v000001d75d578da0_0 .net *"_ivl_4", 31 0, L_000001d75d584270;  1 drivers
v000001d75d578e40_0 .net *"_ivl_6", 31 0, L_000001d75d5846d0;  1 drivers
L_000001d75d5d6628 .functor BUFT 1, C4<0000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v000001d75d578ee0_0 .net *"_ivl_9", 30 0, L_000001d75d5d6628;  1 drivers
LS_000001d75d584810_0_0 .concat [ 1 1 1 1], v000001d75d583c80_0, v000001d75d583c80_0, v000001d75d583c80_0, v000001d75d583c80_0;
LS_000001d75d584810_0_4 .concat [ 1 1 1 1], v000001d75d583c80_0, v000001d75d583c80_0, v000001d75d583c80_0, v000001d75d583c80_0;
LS_000001d75d584810_0_8 .concat [ 1 1 1 1], v000001d75d583c80_0, v000001d75d583c80_0, v000001d75d583c80_0, v000001d75d583c80_0;
LS_000001d75d584810_0_12 .concat [ 1 1 1 1], v000001d75d583c80_0, v000001d75d583c80_0, v000001d75d583c80_0, v000001d75d583c80_0;
LS_000001d75d584810_0_16 .concat [ 1 1 1 1], v000001d75d583c80_0, v000001d75d583c80_0, v000001d75d583c80_0, v000001d75d583c80_0;
LS_000001d75d584810_0_20 .concat [ 1 1 1 1], v000001d75d583c80_0, v000001d75d583c80_0, v000001d75d583c80_0, v000001d75d583c80_0;
LS_000001d75d584810_0_24 .concat [ 1 1 1 1], v000001d75d583c80_0, v000001d75d583c80_0, v000001d75d583c80_0, v000001d75d583c80_0;
LS_000001d75d584810_0_28 .concat [ 1 1 1 1], v000001d75d583c80_0, v000001d75d583c80_0, v000001d75d583c80_0, v000001d75d583c80_0;
LS_000001d75d584810_1_0 .concat [ 4 4 4 4], LS_000001d75d584810_0_0, LS_000001d75d584810_0_4, LS_000001d75d584810_0_8, LS_000001d75d584810_0_12;
LS_000001d75d584810_1_4 .concat [ 4 4 4 4], LS_000001d75d584810_0_16, LS_000001d75d584810_0_20, LS_000001d75d584810_0_24, LS_000001d75d584810_0_28;
L_000001d75d584810 .concat [ 16 16 0 0], LS_000001d75d584810_1_0, LS_000001d75d584810_1_4;
L_000001d75d584270 .arith/sum 32, v000001d75d578f80_0, L_000001d75d58af90;
L_000001d75d5846d0 .concat [ 1 31 0 0], v000001d75d583c80_0, L_000001d75d5d6628;
L_000001d75d5841d0 .arith/sum 32, L_000001d75d584270, L_000001d75d5846d0;
    .scope S_000001d75d5860a0;
T_0 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001d75d583d70_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001d75d579020_0, 0, 32;
    %end;
    .thread T_0, $init;
    .scope S_000001d75d5860a0;
T_1 ;
    %vpi_call/w 3 15 "$dumpfile", "add_sub_tb.vcd" {0 0 0};
    %vpi_call/w 3 16 "$dumpvars", 32'sb00000000000000000000000000000000, S_000001d75d5860a0 {0 0 0};
    %end;
    .thread T_1;
    .scope S_000001d75d5860a0;
T_2 ;
    %fork t_1, S_000001d75d586230;
    %jmp t_0;
    .scope S_000001d75d586230;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001d75d5536c0_0, 0, 32;
T_2.0 ;
    %load/vec4 v000001d75d5536c0_0;
    %cmpi/s 1073741824, 0, 32;
    %jmp/0xz T_2.1, 5;
    %vpi_func 3 21 "$urandom" 32 {0 0 0};
    %store/vec4 v000001d75d578f80_0, 0, 32;
    %vpi_func 3 22 "$urandom" 32 {0 0 0};
    %store/vec4 v000001d75d5790c0_0, 0, 32;
    %vpi_func 3 23 "$urandom_range" 32, 32'sb00000000000000000000000000000000, 32'sb00000000000000000000000000000001 {0 0 0};
    %pad/u 1;
    %store/vec4 v000001d75d583c80_0, 0, 1;
    %delay 5, 0;
    %load/vec4 v000001d75d583c80_0;
    %flag_set/vec4 8;
    %jmp/0 T_2.2, 8;
    %load/vec4 v000001d75d578f80_0;
    %load/vec4 v000001d75d5790c0_0;
    %sub;
    %jmp/1 T_2.3, 8;
T_2.2 ; End of true expr.
    %load/vec4 v000001d75d578f80_0;
    %load/vec4 v000001d75d5790c0_0;
    %add;
    %jmp/0 T_2.3, 8;
 ; End of false expr.
    %blend;
T_2.3;
    %store/vec4 v000001d75d583be0_0, 0, 32;
    %load/vec4 v000001d75d584090_0;
    %load/vec4 v000001d75d583be0_0;
    %cmp/ne;
    %jmp/0xz  T_2.4, 6;
    %vpi_call/w 3 27 "$display", "Error: a = %d, b = %d, select = %b, sum = %b, expected = %b", v000001d75d578f80_0, v000001d75d5790c0_0, v000001d75d583c80_0, v000001d75d584090_0, v000001d75d583be0_0 {0 0 0};
    %load/vec4 v000001d75d583c80_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_2.6, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001d75d583d70_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001d75d583d70_0, 0, 32;
    %jmp T_2.7;
T_2.6 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001d75d579020_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001d75d579020_0, 0, 32;
T_2.7 ;
T_2.4 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001d75d5536c0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001d75d5536c0_0, 0, 32;
    %jmp T_2.0;
T_2.1 ;
    %end;
    .scope S_000001d75d5860a0;
t_0 %join;
    %vpi_call/w 3 37 "$display", "Test finished with %3d subtraction errors.", v000001d75d583d70_0 {0 0 0};
    %vpi_call/w 3 38 "$display", "Test finished with %3d addition errors.", v000001d75d579020_0 {0 0 0};
    %end;
    .thread T_2;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "..\01_bench\adder_tb.sv";
    "..\00_src\add_sub.sv";
